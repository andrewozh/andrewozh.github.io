"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[2081],{5593:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"platform/cluster-local-kind","title":"Local Kind single-cluster setup","description":"Cluster","source":"@site/docs/platform/cluster-local-kind.md","sourceDirName":"platform","slug":"/platform/cluster-local-kind","permalink":"/docs/platform/cluster-local-kind","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CI/CD","permalink":"/docs/platform/cicd"},"next":{"title":"Local Talos multi-cluster setup","permalink":"/docs/platform/cluster-local-talos"}}');var s=l(4848),t=l(8453);const r={},a="Local Kind single-cluster setup",i={},c=[{value:"Cluster",id:"cluster",level:2},{value:"NGINX Ingress + local DNS",id:"nginx-ingress--local-dns",level:2},{value:"LoadBalancer",id:"loadbalancer",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"local-kind-single-cluster-setup",children:"Local Kind single-cluster setup"})}),"\n",(0,s.jsx)(n.h2,{id:"cluster",children:"Cluster"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'cat <<EOF > kind-homelab.yaml\nkind: Cluster\napiVersion: kind.x-k8s.io/v1alpha4\nname: homelab\nnodes:\n  - role: control-plane\n    kubeadmConfigPatches:\n      - |\n        kind: InitConfiguration\n        nodeRegistration:\n          kubeletExtraArgs:\n            node-labels: "ingress-ready=true"\n    extraPortMappings:\n      - containerPort: 80\n        hostPort: 80\n        # listenAddress: 127.0.0.1\n        protocol: TCP\n      - containerPort: 443\n        hostPort: 443\n        # listenAddress: 127.0.0.1\n        protocol: TCP\n  - role: worker\nEOF\n'})}),"\n",(0,s.jsx)(n.h2,{id:"nginx-ingress--local-dns",children:"NGINX Ingress + local DNS"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["configure ",(0,s.jsx)(n.code,{children:"kubeadmConfigPatches"})," by example above"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"configure nginx ingress controller"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ingress-nginx:\n  controller:\n    image:\n      runAsNonRoot: true\n      readOnlyRootFilesystem: false\n      allowPrivilegeEscalation: false\n      seccompProfile:\n        type: RuntimeDefault\n    extraArgs:\n      publish-status-address: localhost\n    service:\n      type: NodePort\n    hostPort:\n      enabled: true\n    publishService:\n      enabled: false\n    updateStrategy:\n      type: RollingUpdate\n      rollingUpdate:\n        maxUnavailable: 1\n    terminationGracePeriodSeconds: 0\n    nodeSelector:\n      ingress-ready: "true"\n    tolerations:\n      - effect: NoSchedule\n        key: node-role.kubernetes.io/master\n        operator: Equal\n      - effect: NoSchedule\n        key: node-role.kubernetes.io/control-plane\n        operator: Equal\n    allowSnippetAnnotations: false\n    watchIngressWithoutClass: true\n    metrics:\n      enabled: true\n      serviceMonitor:\n        enabled: true\n'})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["for each ingress host add appropriate record to ",(0,s.jsx)(n.code,{children:"/etc/hosts"})," file"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cat /etc/hosts\n##\n# Host Database\n#\n# localhost is used to configure the loopback interface\n# when the system is booting.  Do not change this entry.\n##\n127.0.0.1       localhost\n255.255.255.255 broadcasthost\n::1             localhost\n\n127.0.0.1       home.lab\n127.0.0.1       argocd.home.lab\n127.0.0.1       vault.home.lab\n127.0.0.1       grafana.home.lab\n127.0.0.1       prometheus.home.lab\n127.0.0.1       kibana.home.lab\n"})}),"\n",(0,s.jsx)(n.h2,{id:"loadbalancer",children:"LoadBalancer"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"cloud-provider-kind"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"go install sigs.k8s.io/cloud-provider-kind@latest\nkubectl label node homelab-control-plane node.kubernetes.io/exclude-from-external-load-balancers-\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>r,x:()=>a});var o=l(6540);const s={},t=o.createContext(s);function r(e){const n=o.useContext(t);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);