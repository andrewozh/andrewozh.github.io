"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[699],{890:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"db/redis/articles/redis-acl-rules","title":"Redis ACL Rules","description":"https://redis.io/docs/latest/operate/ossandstack/management/security/acl/","source":"@site/docs/db/redis/articles/redis-acl-rules.md","sourceDirName":"db/redis/articles","slug":"/db/redis/articles/redis-acl-rules","permalink":"/docs/db/redis/articles/redis-acl-rules","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"article","permalink":"/docs/tags/article"},{"inline":true,"label":"redis","permalink":"/docs/tags/redis"},{"inline":true,"label":"database","permalink":"/docs/tags/database"}],"version":"current","frontMatter":{"tags":["article","redis","database"]},"sidebar":"tutorialSidebar","previous":{"title":"Redis","permalink":"/docs/db/redis/"},"next":{"title":"Redis Operator by OpsTree","permalink":"/docs/db/redis/redis-operator"}}');var a=n(4848),i=n(8453);const d={tags:["article","redis","database"]},c="Redis ACL Rules",t={},l=[{value:"ACL Rule Syntax:",id:"acl-rule-syntax",level:2},{value:"Common ACL Categories",id:"common-acl-categories",level:2},{value:"Commands",id:"commands",level:2}];function o(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"redis-acl-rules",children:"Redis ACL Rules"})}),"\n",(0,a.jsx)(s.admonition,{title:"Official documentation",type:"note",children:(0,a.jsx)(s.p,{children:(0,a.jsx)(s.a,{href:"https://redis.io/docs/latest/operate/oss_and_stack/management/security/acl/",children:"https://redis.io/docs/latest/operate/oss_and_stack/management/security/acl/"})})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"# Create a read-only user\nuser reader on +@read ~* &* -@dangerous >reader_password\n\n# Create a write user with specific key pattern access\nuser writer on +@write +@read ~app:* -@dangerous >writer_password\n\n# Create an admin user with full access\nuser admin on ~* &* +@all >admin_password\n\n# Create application-specific user\nuser app_user on ~cache:* ~session:* +get +set +del +exists +expire +ttl >app_password\n"})}),"\n",(0,a.jsx)(s.h2,{id:"acl-rule-syntax",children:"ACL Rule Syntax:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"on/off"})," - Enable or disable the user"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"+@category"})," - Allow commands in a category (e.g., @read, @write, @all)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"-@category"})," - Deny commands in a category"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"+command"})," - Allow specific command"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"-command"})," - Deny specific command"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"~pattern"}),' - Key pattern access (e.g., ~* for all keys, ~app:* for keys starting with "app:")']}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"&pattern"})," - Pub/Sub channel pattern access"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:">password"})," - Set user password"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"common-acl-categories",children:"Common ACL Categories"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@read"})," - Read operations (GET, MGET, etc.)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@write"})," - Write operations (SET, DEL, etc.)"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@keyspace"})," - All key-related commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@string"})," - String commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@list"})," - List commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@hash"})," - Hash commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@stream"})," - Stream commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@admin"})," - Administrative commands"]}),"\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.code,{children:"@dangerous"})," - Dangerous commands (FLUSHDB, CONFIG, etc.)"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"commands",children:"Commands"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"# List all users\nACL LIST\n\n# Create a new user\nACL SETUSER john on >john_password ~cached:* +get +set +del\n\n# Create read-only user\nACL SETUSER readonly on >readonly_pass ~* +@read -@dangerous\n\n# Create user with specific database access\nACL SETUSER dbuser on >dbpass ~db:* +@all -flushdb -flushall -config\n\n# Check user permissions\nACL GETUSER john\n\n# Delete a user\nACL DELUSER john\n\n# Save ACL to persistence\nACL SAVE\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(o,{...e})}):o(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>d,x:()=>c});var r=n(6540);const a={},i=r.createContext(a);function d(e){const s=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);