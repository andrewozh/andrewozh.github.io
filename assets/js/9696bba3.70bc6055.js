"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[3355],{6707:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>t,metadata:()=>a,toc:()=>o});const a=JSON.parse('{"id":"infra/platform/platform","title":"GitOps Platform","description":"KCL","source":"@site/docs/infra/platform/platform.md","sourceDirName":"infra/platform","slug":"/infra/platform/","permalink":"/docs/infra/platform/","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Local Talos multi-cluster setup","permalink":"/docs/infra/k8s/cluster-local-talos"},"next":{"title":"App-library Helm chart","permalink":"/docs/infra/platform/applibrary-helm-chart"}}');var l=n(4848),s=n(8453);const t={},i="GitOps Platform",c={},o=[{value:"KCL",id:"kcl",level:2},{value:"ArgoCD",id:"argocd",level:2},{value:"App-library",id:"app-library",level:2}];function p(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(r.header,{children:(0,l.jsx)(r.h1,{id:"gitops-platform",children:"GitOps Platform"})}),"\n",(0,l.jsx)(r.h2,{id:"kcl",children:"KCL"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:["main ",(0,l.jsx)(r.code,{children:"argocd"})," application\ncreates ",(0,l.jsx)(r.code,{children:"ApplicationSet"}),"\ndo i need specific KCL functions for this?"]}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsxs)(r.p,{children:[(0,l.jsx)(r.code,{children:"ApplicationSet"})," generates ",(0,l.jsx)(r.code,{children:"Applications"}),"\n",(0,l.jsx)(r.code,{children:"<app>/releases/<release>/argo.yaml"}),"\nargo application settings\ndeploy/exclude\netc.."]}),"\n",(0,l.jsx)(r.p,{children:"can KCL fetch helm chart and set the values? (helm operator, HelmRelease resourse as part of kcl app)\nhow kcl will know values for different env?"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"argocd",children:"ArgoCD"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"argocd appset schema"}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"how to setup argocd"}),"\n"]}),"\n",(0,l.jsxs)(r.li,{children:["\n",(0,l.jsx)(r.p,{children:"[?] Split applications (charts) and releases\nwe have a single directory for apps (charts)\nand we have a separate directory for releases\neach release refers to a chart\nalso each release keep current values folder structure for sophisticated overrides"}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(r.h2,{id:"app-library",children:"App-library"}),"\n",(0,l.jsxs)(r.ul,{children:["\n",(0,l.jsx)(r.li,{children:(0,l.jsx)(r.a,{href:"/docs/infra/platform/applibrary-helm-chart",children:"App-library Helm chart"})}),"\n"]})]})}function d(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,l.jsx)(r,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>t,x:()=>i});var a=n(6540);const l={},s=a.createContext(l);function t(e){const r=a.useContext(s);return a.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:t(e.components),a.createElement(s.Provider,{value:r},e.children)}}}]);