"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[3355],{6707:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"infra/platform/platform","title":"GitOps Platform","description":"Implementation of GitOps architecture using ArgoCD with multi-dimensional configuration management across clouds, accounts, and environments.","source":"@site/docs/infra/platform/platform.md","sourceDirName":"infra/platform","slug":"/infra/platform/","permalink":"/docs/infra/platform/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"category","permalink":"/docs/tags/category"},{"inline":true,"label":"platform","permalink":"/docs/tags/platform"},{"inline":true,"label":"infrastructure","permalink":"/docs/tags/infrastructure"}],"version":"current","frontMatter":{"tags":["category","platform","infrastructure"]},"sidebar":"tutorialSidebar","previous":{"title":"Local Talos multi-cluster setup","permalink":"/docs/infra/k8s/articles/cluster-local-talos"},"next":{"title":"Helm Applibrary","permalink":"/docs/infra/platform/applibrary"}}');var a=r(4848),s=r(8453);const t={tags:["category","platform","infrastructure"]},l="GitOps Platform",o={},c=[{value:"<strong>ArgoCD</strong> + <strong>Applibrary</strong> + <strong>Configuration</strong>",id:"argocd--applibrary--configuration",level:3},{value:"Key features",id:"key-features",level:3},{value:"Tools",id:"tools",level:2}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"gitops-platform",children:"GitOps Platform"})}),"\n",(0,a.jsx)(e.p,{children:"Implementation of GitOps architecture using ArgoCD with multi-dimensional configuration management across clouds, accounts, and environments."}),"\n",(0,a.jsx)(e.p,{children:(0,a.jsx)(e.img,{alt:"Schema",src:r(8751).A+"",width:"1280",height:"718"})}),"\n",(0,a.jsxs)(e.h3,{id:"argocd--applibrary--configuration",children:[(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"argocd",children:"ArgoCD"})})," + ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"applibrary",children:"Applibrary"})})," + ",(0,a.jsx)(e.strong,{children:(0,a.jsx)(e.a,{href:"articles/config",children:"Configuration"})})]}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Main ArgoCD Application"})}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Read infrastructure schema from ",(0,a.jsx)(e.code,{children:"global.yaml"})," and creates ApplicationSet per each cloud-account-environment combination (per cluster)."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",metastring:'title="global.yaml"',children:"clouds:\n  - name: aws\n    accounts:\n      - name: main\n        environments:\n          - name: common\n          - name: stage\n      - name: dedicated\n        environments:\n          - name: production\n"})}),"\n",(0,a.jsxs)(e.ol,{start:"2",children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"ApplicationSet cloud-account-environment"})}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Search gitops repository for ",(0,a.jsx)(e.code,{children:"argo.yaml"})," and creates applications based on settings."]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-yaml",metastring:'title="application/ypur-app/argo.yaml"',children:"destination: all\nnamespace: api\nautosync: true\nsyncOptions:\n  - SkipDryRunOnMissingResource=true\n"})}),"\n",(0,a.jsxs)(e.ol,{start:"3",children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.strong,{children:"Application"})}),"\n"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:["uses ",(0,a.jsx)(e.a,{href:"applibrary",children:"Helm Applibrary"})," from ",(0,a.jsx)(e.code,{children:"_chart/"})," as a dependency"]}),"\n",(0,a.jsxs)(e.li,{children:["adds ",(0,a.jsx)(e.a,{href:"articles/config#global-configuration-schema",children:"global configuration"})," values files"]}),"\n",(0,a.jsxs)(e.li,{children:["adds its ",(0,a.jsx)(e.a,{href:"articles/config#application-configuration-schema",children:"own configuration"})," values files"]}),"\n"]}),"\n",(0,a.jsx)(e.h3,{id:"key-features",children:"Key features"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"ArgoCD managed everything"}),"\n",(0,a.jsx)(e.li,{children:"ApplicationSet per cluster"}),"\n",(0,a.jsx)(e.li,{children:"Monorepo for infra applications"}),"\n",(0,a.jsx)(e.li,{children:"Dynamic application repo discovery"}),"\n",(0,a.jsx)(e.li,{children:"Sophisticated DRY configuration hierarchy"}),"\n",(0,a.jsx)(e.li,{children:"Developer Platform: ~0% ClickOps / ~100% GitOps"}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"tools",children:"Tools"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"crossplane"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"keda"})}),"\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.code,{children:"reloader"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,s.R)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(d,{...n})}):d(n)}},8453:(n,e,r)=>{r.d(e,{R:()=>t,x:()=>l});var i=r(6540);const a={},s=i.createContext(a);function t(n){const e=i.useContext(s);return i.useMemo(function(){return"function"==typeof n?n(e):{...e,...n}},[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:t(n.components),i.createElement(s.Provider,{value:e},n.children)}},8751:(n,e,r)=>{r.d(e,{A:()=>i});const i=r.p+"assets/images/devops-sandbox-platform.excalidraw-75bc2ac1e964e0a7f1ee34e4a82ea1fc.png"}}]);