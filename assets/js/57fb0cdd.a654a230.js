"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[2152],{4922:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"security/secrets/external-secrets","title":"external-secrets","description":"|Distro|external-secrets|","source":"@site/docs/security/secrets/external-secrets.md","sourceDirName":"security/secrets","slug":"/security/secrets/external-secrets","permalink":"/docs/security/secrets/external-secrets","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Secrets Management","permalink":"/docs/security/secrets/"},"next":{"title":"Vault","permalink":"/docs/security/secrets/vault"}}');var n=s(4848),c=s(8453);const a={},l="external-secrets",i={},o=[{value:"TODO",id:"todo",level:2},{value:"Setup",id:"setup",level:2},{value:"Hashicorp Vault",id:"hashicorp-vault",level:3},{value:"Usecases",id:"usecases",level:2},{value:"Basic: get secret, add secret from secret store",id:"basic-get-secret-add-secret-from-secret-store",level:3},{value:"Common: generate secrets, update secrets, rotate secrets",id:"common-generate-secrets-update-secrets-rotate-secrets",level:3},{value:"Maintenence",id:"maintenence",level:2},{value:"Articles",id:"articles",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"external-secrets",children:"external-secrets"})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:(0,n.jsx)(t.strong,{children:"Distro"})}),(0,n.jsx)(t.th,{children:(0,n.jsx)(t.a,{href:"https://external-secrets.io",children:"external-secrets"})})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Type"})}),(0,n.jsx)(t.td,{children:"kubernetes-operator"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Deploy"})}),(0,n.jsx)(t.td,{children:"helm-chart"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Docs"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://external-secrets.io/latest/",children:"link"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Backup"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"Scaling"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"CLI"})}),(0,n.jsx)(t.td,{})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.strong,{children:"UI"})}),(0,n.jsx)(t.td,{})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"todo",children:"TODO"}),"\n",(0,n.jsxs)(t.ul,{className:"contains-task-list",children:["\n",(0,n.jsxs)(t.li,{className:"task-list-item",children:[(0,n.jsx)(t.input,{type:"checkbox",checked:!0,disabled:!0})," ","use ExternalSecret to get secret from vault"]}),"\n",(0,n.jsx)(t.li,{children:"[~] PushSecret"}),"\n",(0,n.jsxs)(t.li,{className:"task-list-item",children:[(0,n.jsx)(t.input,{type:"checkbox",disabled:!0})," ","automate generating secrets"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"setup",children:"Setup"}),"\n",(0,n.jsx)(t.h3,{id:"hashicorp-vault",children:"Hashicorp Vault"}),"\n",(0,n.jsxs)(t.p,{children:["See ",(0,n.jsx)(t.a,{href:"/docs/security/secrets/vault",children:"Vault"})," docs for more details."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'apiVersion: external-secrets.io/v1beta1\nkind: ClusterSecretStore\nmetadata:\n  name: vault\nspec:\n  provider:\n    vault:\n      server: "http://vault.vault.svc.cluster.local:8200"\n      path: "common"\n      version: "v2"\n      auth:\n        tokenSecretRef:\n          name: "vault-token"\n          namespace: vault\n          key: "token"\n'})}),"\n",(0,n.jsx)(t.h2,{id:"usecases",children:"Usecases"}),"\n",(0,n.jsx)(t.h3,{id:"basic-get-secret-add-secret-from-secret-store",children:"Basic: get secret, add secret from secret store"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["example ",(0,n.jsx)(t.code,{children:"ExternalSecret"})," to read secret from secret store"]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'apiVersion: external-secrets.io/v1beta1\nkind: ExternalSecret\nmetadata:\n  name: test\n  namespace: default\nspec:\n  refreshInterval: 10m\n  secretStoreRef:\n    name: vault\n    kind: ClusterSecretStore\n  target:\n    name: test\n    creationPolicy: Owner\n  dataFrom:\n  - extract:\n      key: "/test"\n'})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["example ",(0,n.jsx)(t.code,{children:"PushSecret"})," from k8s to secret store"]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"Usecase: some resource created in k8s store its secret in k8s-secret,\nand we use PushSecret to save it in Vault and be accessible outside of k8s"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-yaml",children:'apiVersion: external-secrets.io/v1alpha1\nkind: PushSecret\nmetadata:\n  name: pushsecret-example # Customisable\n  namespace: default # Same of the SecretStores\nspec:\n  updatePolicy: Replace # Policy to overwrite existing secrets in the provider on sync\n  deletionPolicy: Delete # the provider\' secret will be deleted if the PushSecret is deleted\n  refreshInterval: 10m # Refresh interval for which push secret will reconcile\n  secretStoreRefs: # A list of secret stores to push secrets to\n    - name: vault\n      kind: ClusterSecretStore\n  selector:\n    secret:\n      name: test # Source Kubernetes secret to be pushed\n  template:\n    metadata:\n      annotations: { }\n      labels: { }\n    data:\n      best-pokemon: "{{ .best-pokemon | toString | upper }} is the really best!"\n    # Uses an existing template from configmap\n    # Secret is fetched, merged and templated within the referenced configMap data\n    # It does not update the configmap, it creates a secret with: data["alertmanager.yml"] = ...result...\n    templateFrom:\n      - configMap:\n          name: application-config-tmpl\n          items:\n            - key: config.yml\n  data:\n    - conversionStrategy: None # Also supports the ReverseUnicode strategy\n      match:\n        secretKey: best-pokemon # Source Kubernetes secret key to be pushed\n        remoteRef:\n          remoteKey: my-first-parameter # Remote reference (where the secret is going to be pushed)\n'})}),"\n",(0,n.jsx)(t.h3,{id:"common-generate-secrets-update-secrets-rotate-secrets",children:"Common: generate secrets, update secrets, rotate secrets"}),"\n",(0,n.jsx)(t.h2,{id:"maintenence",children:"Maintenence"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Backup / Restore"}),"\n",(0,n.jsx)(t.li,{children:"Scaling"}),"\n",(0,n.jsx)(t.li,{children:"Upgrade"}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"articles",children:"Articles"})]})}function h(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>l});var r=s(6540);const n={},c=r.createContext(n);function a(e){const t=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(c.Provider,{value:t},e.children)}}}]);