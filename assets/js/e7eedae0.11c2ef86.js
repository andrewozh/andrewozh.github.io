"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[119],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},9489:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"db/mongodb/mongodb-community","title":"MongoDB Community","description":"|Distro|Mongodb Controllers for Kubernetes|","source":"@site/docs/db/mongodb/mongodb-community.md","sourceDirName":"db/mongodb","slug":"/db/mongodb/mongodb-community","permalink":"/docs/db/mongodb/mongodb-community","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MongoDB Architecture","permalink":"/docs/db/mongodb/mongodb-architecture"},"next":{"title":"PostgreSQL","permalink":"/docs/db/postgresql/"}}');var o=t(4848),r=t(8453);const i={},a="MongoDB Community",c={},d=[{value:"\u2705 Setup",id:"white_check_mark-setup",level:2},{value:"Usecases",id:"usecases",level:2},{value:"\u2705 Basic: create db, create user, connect, etc.",id:"white_check_mark-basic-create-db-create-user-connect-etc",level:3},{value:"Common: write data, read data, replication, etc.",id:"common-write-data-read-data-replication-etc",level:3},{value:"\u2705 Monitoring",id:"white_check_mark-monitoring",level:2},{value:"Maintenence",id:"maintenence",level:2},{value:"Articles",id:"articles",level:2}];function m(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"mongodb-community",children:"MongoDB Community"})}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:(0,o.jsx)(n.strong,{children:"Distro"})}),(0,o.jsx)(n.th,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/mongodb-kubernetes",children:"Mongodb Controllers for Kubernetes"})})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Type"})}),(0,o.jsx)(n.td,{children:"kubernetes-operator"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Deploy"})}),(0,o.jsx)(n.td,{children:"helm-chart"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Docs"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/mongodb-kubernetes/tree/master/docs/mongodbcommunity",children:"link"})})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Backup"})}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Scaling"})}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"CLI"})}),(0,o.jsx)(n.td,{})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"UI"})}),(0,o.jsx)(n.td,{})]})]})]}),"\n",(0,o.jsxs)(n.h2,{id:"white_check_mark-setup",children:["\u2705"," Setup"]}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsxs)(n.mdxAdmonitionTitle,{children:["All setup is done via the ",(0,o.jsx)(n.code,{children:"MongoDBCommunity"})," custom resource"]}),(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/mongodb-kubernetes/blob/master/docs/mongodbcommunity/architecture.md",children:"Community Operator Architecture"})})]}),"\n",(0,o.jsx)(n.h2,{id:"usecases",children:"Usecases"}),"\n",(0,o.jsxs)(n.h3,{id:"white_check_mark-basic-create-db-create-user-connect-etc",children:["\u2705"," Basic: create db, create user, connect, etc."]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Databases"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["There is no database creation, just create user and assign a ",(0,o.jsx)(n.code,{children:"dbOwner"})," role to it (example forward)"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Create user"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mongo-admin-user\n  namespace: mongo\ntype: Opaque\nstringData:\n  password: admin123\nEOF\n"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:'apiVersion: mongodbcommunity.mongodb.com/v1\nkind: MongoDBCommunity\nmetadata:\n  name: mongodb\nspec:\n  members: 1\n  type: ReplicaSet\n  version: "8.0.11"\n  security:\n    authentication:\n      modes:\n      - SCRAM\n  users:\n  - name: admin-user\n    db: admin\n    passwordSecretRef:\n      name: mongo-admin-user\n    roles:\n    - name: clusterAdmin\n      db: admin\n    - name: userAdminAnyDatabase\n      db: admin\n    scramCredentialsSecretName: my-scram\n  - name: test-user\n    db: test\n    passwordSecretRef:\n      name: mongo-admin-user\n    roles:\n    - name: dbOwner\n      db: test\n    scramCredentialsSecretName: test-scram\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Connect"}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Port-forward service ",(0,o.jsx)(n.code,{children:"mongodb-svc"})," to localhost"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'mongosh "mongodb://test-user:admin123@127.0.0.1:27017/test"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"common-write-data-read-data-replication-etc",children:"Common: write data, read data, replication, etc."}),"\n",(0,o.jsxs)(n.h2,{id:"white_check_mark-monitoring",children:["\u2705"," Monitoring"]}),"\n",(0,o.jsx)(n.admonition,{title:"Monitoring setup example",type:"tip",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/mongodb-kubernetes/blob/master/docs/mongodbcommunity/prometheus/mongodb-prometheus-sample.yaml",children:"https://github.com/mongodb/mongodb-kubernetes/blob/master/docs/mongodbcommunity/prometheus/mongodb-prometheus-sample.yaml"})})}),"\n",(0,o.jsx)(n.admonition,{title:"Grafana Dashboard",type:"tip",children:(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://github.com/mongodb/mongodb-kubernetes/blob/master/docs/mongodbcommunity/grafana/sample_dashboard.json",children:"https://github.com/mongodb/mongodb-kubernetes/blob/master/docs/mongodbcommunity/grafana/sample_dashboard.json"})})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"add secret with credentials for prometheus metrics endpoint"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"cat <<EOF | kubectl apply -f -\napiVersion: v1\nkind: Secret\nmetadata:\n  name: mongodb-prometheus-user\n  namespace: mongo\ntype: Opaque\nstringData:\n  password: prometheus\n  username: prometheus\nEOF\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["update ",(0,o.jsx)(n.code,{children:"MongoDBCommunity"})," resource with prometheus conf"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"spec:\n  prometheus:\n    username: prometheus\n    passwordSecretRef:\n      name: mongodb-prometheus-user\n"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["create ",(0,o.jsx)(n.code,{children:"ServiceMonitor"})," for prometheus"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  annotations:\n\n  # This needs to match `spec.ServiceMonitorSelector.matchLabels` from your\n  # `prometheuses.monitoring.coreos.com` resouce.\n  labels:\n    release: prometheus\n\n  name: mongodb-servicemonitor\nspec:\n  endpoints:\n\n  # Configuring a Prometheus Endpoint with basic Auth.\n  # `prom-secret` is a Secret containing a `username` and `password` entries.\n  - basicAuth:\n      password:\n        key: password\n        name: mongodb-prometheus-user\n      username:\n        key: username\n        name: mongodb-prometheus-user\n\n    # This port matches what we created in our MongoDB Service.\n    port: prometheus\n\n    # If using HTTPS enabled endpoint, change scheme to https\n    scheme: http\n\n    # Configure different TLS related settings. For more information, see:\n    # https://github.com/prometheus-operator/prometheus-operator/blob/main/pkg/apis/monitoring/v1/types.go#L909\n    # tlsConfig:\n    #    insecureSkipVerify: true\n\n  # What namespace to watch\n  namespaceSelector:\n    matchNames:\n    - {{ .Release.Namespace }}\n\n  # Service labels to match\n  selector:\n    matchLabels:\n      app: mongodb-svc\n"})}),"\n",(0,o.jsx)(n.h2,{id:"maintenence",children:"Maintenence"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Backup / Restore"}),"\n",(0,o.jsx)(n.li,{children:"Scaling"}),"\n",(0,o.jsx)(n.li,{children:"Upgrade"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"articles",children:"Articles"})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(m,{...e})}):m(e)}}}]);