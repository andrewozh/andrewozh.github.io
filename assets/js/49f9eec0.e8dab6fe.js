"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[5618],{2674:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"db/kafka/kafka","title":"Apache Kafka","description":"||Self-hosted|SaaS|","source":"@site/docs/db/kafka/kafka.md","sourceDirName":"db/kafka","slug":"/db/kafka/","permalink":"/docs/db/kafka/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"tool","permalink":"/docs/tags/tool"},{"inline":true,"label":"kafka","permalink":"/docs/tags/kafka"},{"inline":true,"label":"database","permalink":"/docs/tags/database"}],"version":"current","frontMatter":{"tags":["tool","kafka","database"]},"sidebar":"tutorialSidebar","previous":{"title":"Clickhouse Cloud","permalink":"/docs/db/clickhouse/clickhouse-cloud"},"next":{"title":"Strimzi Kafka Operator","permalink":"/docs/db/kafka/strimzi"}}');var s=r(4848),a=r(8453);const i={tags:["tool","kafka","database"]},o="Apache Kafka",l={},d=[{value:"Architecture",id:"architecture",level:2},{value:"Kafka",id:"kafka",level:3},{value:"Zookeeper",id:"zookeeper",level:3},{value:"KRaft",id:"kraft",level:3},{value:"Monitoring",id:"monitoring",level:2},{value:"Patform integration",id:"patform-integration",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apache-kafka",children:"Apache Kafka"})}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{}),(0,s.jsx)(t.th,{children:"Self-hosted"}),(0,s.jsx)(t.th,{children:"SaaS"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Tool"})}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"/docs/db/kafka/strimzi",children:"Strimzi Kafka Operator"})}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Type"})}),(0,s.jsx)(t.td,{children:"kubernetes-operator"}),(0,s.jsx)(t.td,{})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:(0,s.jsx)(t.strong,{children:"Deploy"})}),(0,s.jsx)(t.td,{children:"helm-chart"}),(0,s.jsx)(t.td,{})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"How it works"}),"\n",(0,s.jsx)(t.li,{children:"Main terms"}),"\n",(0,s.jsx)(t.li,{children:"Diff between self-hosted and SaaS"}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"kafka",children:"Kafka"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"  +-----------+       +---------+       +-----------+\n  | Producer1 | ----\x3e |         |       |           |\n  | Producer2 | ----\x3e |  Kafka  | <---- | Consumer1 |\n  |           |       |  Broker | <---- | Consumer2 |\n  +-----------+       +---------+       +-----------+\n                           |\n                           v\n                      +----------+\n                      | Topic A  |\n                      +----------+\n                      |Partition0|\n                      |Partition1|\n                      +----------+\n"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Cluster"})," -- made up of multiple ",(0,s.jsx)(t.strong,{children:"brokers"}),", which work together to provide scalability and fault tolerance."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Broker"})," -- A Kafka server that stores data and serves clients. Each broker handles some partitions."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Topic"})," -- A named category where messages are stored."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Partition"})," -- Each topic is split into partitions for scalability and parallelism. Each partition is an ordered, immutable sequence of messages."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Replication Factor"})," -- determines how many copies of each partition exist in the cluster. A replication factor of 3 is typical, ensuring that the data survives the failure of up to two brokers."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Leader"})," -- each topic partition, have one leader broker to assign replication of topic partitions to the follower brokers."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Follower"})," -- the rest of brokers that is not a leader for a partition. They replicate the data from the leader broker."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Producer"})," -- Sends data (messages) to a specific topic using a ",(0,s.jsx)(t.strong,{children:"partition key"}),", which determines which partition the message will go to."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Consumer"})," -- Reads messages from a topic. Consumers can be grouped into Consumer Groups for load balancing."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Consumer Group"})," -- A group of consumers that share the work of reading from a topic. Each partition is read by only one consumer in the group."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Offset"})," -- unique identifiers assigned to each record within a partition. They help consumers keep track of the messages they have read, ensuring that they can resume processing from where they left off in case of a failure."]}),"\n",(0,s.jsx)(t.h3,{id:"zookeeper",children:"Zookeeper"}),"\n",(0,s.jsx)(t.p,{children:"Used to manage Kafka brokers (now optional with KRaft mode)."}),"\n",(0,s.jsx)(t.h3,{id:"kraft",children:"KRaft"}),"\n",(0,s.jsx)(t.h2,{id:"monitoring",children:"Monitoring"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"what metrics to pay attention on"}),"\n",(0,s.jsx)(t.li,{children:"alerts"}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"patform-integration",children:"Patform integration"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"how this tool integrated into a platform"}),"\n",(0,s.jsx)(t.li,{children:"how to use it in a platform"}),"\n",(0,s.jsx)(t.li,{children:"how to debug"}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);