"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[8],{3901:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"db/clickhouse/altinity/altinity-setup-low-resource","title":"Altinity ClickHouse low resource setup","description":"ClickHouseKeeperInstallation","source":"@site/docs/db/clickhouse/altinity/altinity-setup-low-resource.md","sourceDirName":"db/clickhouse/altinity","slug":"/db/clickhouse/altinity/altinity-setup-low-resource","permalink":"/docs/db/clickhouse/altinity/altinity-setup-low-resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Automatic Clickhouse cluster backups and Restore guide","permalink":"/docs/db/clickhouse/altinity/altinity-automatic-backup"},"next":{"title":"Clickhouse Cloud","permalink":"/docs/db/clickhouse/clickhouse-cloud"}}');var s=o(4848),i=o(8453);const r={},a="Altinity ClickHouse low resource setup",l={},c=[{value:"ClickHouseKeeperInstallation",id:"clickhousekeeperinstallation",level:2},{value:"ClickHouseInstallation for low resource environments",id:"clickhouseinstallation-for-low-resource-environments",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"altinity-clickhouse-low-resource-setup",children:"Altinity ClickHouse low resource setup"})}),"\n",(0,s.jsx)(n.h2,{id:"clickhousekeeperinstallation",children:"ClickHouseKeeperInstallation"}),"\n",(0,s.jsx)(n.admonition,{title:"Official single-node example",type:"note",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/Altinity/clickhouse-operator/blob/master/docs/chk-examples/02-extended-1-node.yaml",children:"https://github.com/Altinity/clickhouse-operator/blob/master/docs/chk-examples/02-extended-1-node.yaml"})})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: "clickhouse-keeper.altinity.com/v1"\nkind: "ClickHouseKeeperInstallation"\nmetadata:\n  name: extended\n  annotations:\n    prometheus.io/port: "7000"\n    prometheus.io/scrape: "true"\nspec:\n  configuration:\n    clusters:\n      - name: cluster1\n        layout:\n          replicasCount: 1\n    settings:\n      logger/level: "trace"\n      logger/console: "true"\n      listen_host: "0.0.0.0"\n      keeper_server/four_letter_word_white_list: "*"\n      keeper_server/coordination_settings/raft_logs_level: "information"\n      prometheus/endpoint: "/metrics"\n      prometheus/port: "7000"\n      prometheus/metrics: "true"\n      prometheus/events: "true"\n      prometheus/asynchronous_metrics: "true"\n      prometheus/status_info: "false"\n  defaults:\n    templates:\n      # Templates are specified as default for all clusters\n      podTemplate: default\n      dataVolumeClaimTemplate: default\n  templates:\n    podTemplates:\n      - name: default\n        metadata:\n          labels:\n            app: clickhouse-keeper\n          annotations:\n            prometheus.io/port: "7000"\n            prometheus.io/scrape: "true"\n        spec:\n          # affinity, remove it to allow use in single node test environment\n          affinity:\n            podAntiAffinity:\n              requiredDuringSchedulingIgnoredDuringExecution:\n                - labelSelector:\n                    matchExpressions:\n                      - key: "app"\n                        operator: In\n                        values:\n                          - clickhouse-keeper\n                  topologyKey: "kubernetes.io/hostname"\n          containers:\n            - name: clickhouse-keeper\n              imagePullPolicy: IfNotPresent\n              image: "clickhouse/clickhouse-keeper:latest"\n              resources:\n                requests:\n                  memory: "256M"\n                  cpu: "1"\n                limits:\n                  memory: "4Gi"\n                  cpu: "2"\n          securityContext:\n            fsGroup: 101\n    volumeClaimTemplates:\n      - name: default\n        spec:\n          accessModes:\n            - ReadWriteOnce\n          resources:\n            requests:\n              storage: 10Gi\n'})}),"\n",(0,s.jsx)(n.h2,{id:"clickhouseinstallation-for-low-resource-environments",children:"ClickHouseInstallation for low resource environments"}),"\n",(0,s.jsx)(n.admonition,{title:"Official doc",type:"note",children:(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://kb.altinity.com/altinity-kb-setup-and-maintenance/configure_clickhouse_for_low_mem_envs/",children:"https://kb.altinity.com/altinity-kb-setup-and-maintenance/configure_clickhouse_for_low_mem_envs/"})})}),"\n",(0,s.jsxs)(n.p,{children:["Here's adjusted ",(0,s.jsx)(n.code,{children:"ClickHouseInstallation"})," manifest for low resource environments, based on the official example"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'apiVersion: "clickhouse.altinity.com/v1"\nkind: "ClickHouseInstallation"\nmetadata:\n  name: "clickhouse"\nspec:\n  configuration:\n    settings:\n      mysql_port: "0"\n      postgresql_port: "0"\n      mlock_executable: "false"  # Allow binary pages to be unloaded from RAM\n      mark_cache_size: "268435456"  # 256 MB\n      index_mark_cache_size: "67108864"  # 64 MB\n      uncompressed_cache_size: "16777216"  # 16 MB\n      max_thread_pool_size: "2000"\n      max_connections: "64"\n      max_concurrent_queries: "8"\n      max_server_memory_usage_to_ram_ratio: "0.75"  # 75% of RAM for ClickHouse\n      max_server_memory_usage: "0"  # Let overcommiter manage available RAM\n      background_pool_size: "2"\n      background_merges_mutations_concurrency_ratio: "2"\n      merge_tree/merge_max_block_size: "1024"\n      merge_tree/max_bytes_to_merge_at_max_space_in_pool: "1073741824"  # 1 GB max part\n      merge_tree/number_of_free_entries_in_pool_to_lower_max_size_of_merge: "2"\n      merge_tree/number_of_free_entries_in_pool_to_execute_mutation: "2"\n      merge_tree/number_of_free_entries_in_pool_to_execute_optimize_entire_partition: "2"\n      background_buffer_flush_schedule_pool_size: "1"\n      background_merges_mutations_scheduling_policy: "round_robin"\n      background_move_pool_size: "1"\n      background_fetches_pool_size: "1"\n      background_common_pool_size: "2"\n      background_schedule_pool_size: "8"\n      background_message_broker_schedule_pool_size: "1"\n      background_distributed_schedule_pool_size: "1"\n      tables_loader_foreground_pool_size: "0"\n      tables_loader_background_pool_size: "0"\n    files:\n      config.d/disable_optional_logs.xml: |\n        <clickhouse>\n          <query_thread_log remove="1" />\n          <opentelemetry_span_log remove="1" />\n          <processors_profile_log remove="1" />\n        </clickhouse>\n    profiles:\n      default/max_threads: "2"\n      default/queue_max_wait_ms: "1000"\n      default/max_execution_time: "600"\n      default/input_format_parallel_parsing: "0"\n      default/output_format_parallel_formatting: "0"\n      default/max_bytes_before_external_group_by: "3221225472"  # 3 GB\n      default/max_bytes_before_external_sort: "3221225472"  # 3 GB\n    zookeeper:\n      nodes:\n        - host: chk-extended-cluster1-0-0\n          port: 2181\n      session_timeout_ms: 30000\n      operation_timeout_ms: 10000\n    clusters:\n      - name: "clickhouse"\n        layout:\n          shardsCount: 1 # Do not use sharding for compatibility with Clickhouse Cloud\n          replicasCount: 1\n    users:\n      dante/networks/ip: "::/0"\n      dante/password: dante\n      dante/profile: default\n  templates:\n    podTemplates:\n      - name: clickhouse-pod\n        spec:\n          containers:\n            - name: clickhouse\n              image: clickhouse/clickhouse-server:24.8\n              resources:\n                requests:\n                  memory: "2Gi"\n                  cpu: "1"\n                limits:\n                  memory: "4Gi"\n                  cpu: "2"\n              readinessProbe:\n                httpGet:\n                  path: /ping\n                  port: 8123\n                initialDelaySeconds: 60\n                timeoutSeconds: 10\n                periodSeconds: 15\n                failureThreshold: 10\n    volumeClaimTemplates:\n      - name: data-volume\n        spec:\n          accessModes:\n            - ReadWriteOnce\n          resources:\n            requests:\n              storage: 10Gi\n\n'})})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>r,x:()=>a});var t=o(6540);const s={},i=t.createContext(s);function r(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);