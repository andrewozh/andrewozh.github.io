"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[2908],{864:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"observability/logs/elastic/articles/elastic-auth-management","title":"Manage ECK ElasticSearch users as Kubernetes resources","description":"Architecture (external-secrets)","source":"@site/docs/observability/logs/elastic/articles/elastic-auth-management.md","sourceDirName":"observability/logs/elastic/articles","slug":"/observability/logs/elastic/articles/elastic-auth-management","permalink":"/docs/observability/logs/elastic/articles/elastic-auth-management","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"article","permalink":"/docs/tags/article"},{"inline":true,"label":"eck","permalink":"/docs/tags/eck"},{"inline":true,"label":"elasticsearch","permalink":"/docs/tags/elasticsearch"},{"inline":true,"label":"logs","permalink":"/docs/tags/logs"},{"inline":true,"label":"observability","permalink":"/docs/tags/observability"}],"version":"current","frontMatter":{"tags":["article","eck","elasticsearch","logs","observability"]},"sidebar":"tutorialSidebar","previous":{"title":"ElasticSearch","permalink":"/docs/observability/logs/elastic/"},"next":{"title":"Elastic Cloud on Kubernetes","permalink":"/docs/observability/logs/elastic/elastic-operator"}}');var a=n(4848),t=n(8453);const l={tags:["article","eck","elasticsearch","logs","observability"]},c="Manage ECK ElasticSearch users as Kubernetes resources",i={},o=[{value:"Architecture (external-secrets)",id:"architecture-external-secrets",level:2},{value:"Generate user credentials",id:"generate-user-credentials",level:3},{value:"Generate fileRealm secret",id:"generate-filerealm-secret",level:3},{value:"Configure ECK to use fileRealm",id:"configure-eck-to-use-filerealm",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"manage-eck-elasticsearch-users-as-kubernetes-resources",children:"Manage ECK ElasticSearch users as Kubernetes resources"})}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"es_users:\n  - login: andrew-ozhegov\n    roles:\n      - superuser\n      - admin\n  - login: jane-doe\n    roles:\n      - read_only\n"})}),"\n",(0,a.jsx)(s.h2,{id:"architecture-external-secrets",children:"Architecture (external-secrets)"}),"\n",(0,a.jsx)(s.h3,{id:"generate-user-credentials",children:"Generate user credentials"}),"\n",(0,a.jsxs)(s.p,{children:["Use ",(0,a.jsx)(s.code,{children:"PushSecret"})," with generator ",(0,a.jsx)(s.code,{children:"Password"})," to generate creds and store it in ",(0,a.jsx)(s.code,{children:"SecretStore"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'---\napiVersion: generators.external-secrets.io/v1alpha1\nkind: Password\nmetadata:\n  name: elasticsearch-password\nspec:\n  length: 32\n  digits: 5\n  symbols: 5\n  symbolCharacters: "-_$@"\n  noUpper: false\n  allowRepeat: true\n{{- range .Values.es_users }}\n---\napiVersion: external-secrets.io/v1alpha1\nkind: PushSecret\nmetadata:\n  name: es-user-{{ .login }}\nspec:\n  refreshInterval: 6h\n  secretStoreRefs:\n    - name: vault\n      kind: ClusterSecretStore\n  selector:\n    generatorRef:\n      apiVersion: generators.external-secrets.io/v1alpha1\n      kind: Password\n      name: elasticsearch-password\n  data:\n    - match:\n        secretKey: password\n        remoteRef:\n          remoteKey: elasticsearch_users/{{ .login }}\n          property: password\n    - match:\n        secretKey: username\n        remoteRef:\n          remoteKey: elasticsearch_users/{{ .login }}\n          property: username\n    - match:\n        secretKey: roles\n        remoteRef:\n          remoteKey: elasticsearch_users/{{ .login }}\n          property: roles\n  template:\n    data:\n      password: "{{ `{{ .password }}` }}"\n      username: "{{ .login }}"\n      roles: {{ .roles | toJson | quote }}\n{{- end }}\n'})}),"\n",(0,a.jsx)(s.h3,{id:"generate-filerealm-secret",children:"Generate fileRealm secret"}),"\n",(0,a.jsxs)(s.p,{children:["Use ",(0,a.jsx)(s.code,{children:"ExternalSecret"})," to find all elasticsearch users in ",(0,a.jsx)(s.code,{children:"SecretStore"})," and generate a secret with ",(0,a.jsx)(s.code,{children:"fileRealm"})]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:'---\napiVersion: external-secrets.io/v1\nkind: ExternalSecret\nmetadata:\n  name: elasticsearch-filerealm\nspec:\n  secretStoreRef:\n    name: vault\n    kind: ClusterSecretStore\n  target:\n    name: elasticsearch-filerealm\n    template:\n      engineVersion: v2\n      data:\n        users: |\n          {{ "{{" }}- range $key, $value := . -{{ "}}" }}\n          {{ "{{" }}- $decodedValue := ( $value | fromJson ) -{{ "}}" }}\n          {{ "{{" }}- $username := get $decodedValue "username" -{{ "}}" }}\n          {{ "{{" }}- $password := get $decodedValue "password" -{{ "}}" }}\n          {{ "{{" }} (printf "%s" (htpasswd $username $password)) {{ "}}" }}{{ "{{" }} "\\n" {{ "}}" }}\n          {{ "{{" }}- end -{{ "}}" }}\n        users_roles: |\n          {{ "{{" }}- range $key, $value := . -{{ "}}" }}\n          {{ "{{" }}- $decodedValue := ( $value | fromJson ) -{{ "}}" }}\n          {{ "{{" }}- $roles    := get $decodedValue "roles" | fromJson -{{ "}}" }}\n          {{ "{{" }}- $username := get $decodedValue "username" -{{ "}}" }}\n          {{ "{{" }}- range $role := $roles -{{ "}}" }}\n          {{ "{{" }} $role {{ "}}" }}:{{ "{{" }} $username {{ "}}" }}{{ "{{" }} "\\n" {{ "}}" }}\n          {{ "{{" }}- end -{{ "}}" }}\n          {{ "{{" }}- end -{{ "}}" }}\n  dataFrom:\n  - find:\n      conversionStrategy: Default\n      decodingStrategy: None\n      path: elasticsearch_users\n'})}),"\n",(0,a.jsx)(s.h3,{id:"configure-eck-to-use-filerealm",children:"Configure ECK to use fileRealm"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-yaml",children:"eck-stack:\n  eck-elasticsearch:\n    auth:\n      fileRealm:\n        - secretName: fluentbit-user-secret\n        - secretName: elasticsearch-filerealm\n      roles:\n        - secretName: elasticsearch-roles\n"})})]})}function u(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>l,x:()=>c});var r=n(6540);const a={},t=r.createContext(a);function l(e){const s=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(t.Provider,{value:s},e.children)}}}]);