"use strict";(self.webpackChunkdevops_sandbox=self.webpackChunkdevops_sandbox||[]).push([[567],{2315:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/pritunl-import-ad6b2cad3cd914f42fb05de9bcb16df8.png"},3292:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/pritunl-connect-a77553e5bb3d57bf5f51f633ac11394c.png"},3696:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"infra/cloud/vpn/vpn","title":"VPN: Pritunl","description":"By default, our network hosts are not accessible from the outside, VPN will allow you to access them via their private IP addresses.","source":"@site/docs/infra/cloud/vpn/vpn.md","sourceDirName":"infra/cloud/vpn","slug":"/infra/cloud/vpn/","permalink":"/docs/infra/cloud/vpn/","draft":false,"unlisted":false,"tags":[{"inline":true,"label":"distro","permalink":"/docs/tags/distro"},{"inline":true,"label":"pritunl","permalink":"/docs/tags/pritunl"},{"inline":true,"label":"cloud","permalink":"/docs/tags/cloud"},{"inline":true,"label":"infrastructure","permalink":"/docs/tags/infrastructure"}],"version":"current","frontMatter":{"tags":["distro","pritunl","cloud","infrastructure"]},"sidebar":"tutorialSidebar","previous":{"title":"Cloud infra","permalink":"/docs/infra/cloud/"},"next":{"title":"Kubernetes","permalink":"/docs/infra/k8s/"}}');var i=s(4848),t=s(8453);const l={tags:["distro","pritunl","cloud","infrastructure"]},o="VPN: Pritunl",a={},c=[{value:"TODO",id:"todo",level:2},{value:"Terrafrom setup",id:"terrafrom-setup",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Access",id:"access",level:3},{value:"Backup &amp; Restore",id:"backup--restore",level:3},{value:"Setup guide",id:"setup-guide",level:2},{value:"Add user&#39;s IP to allowed list",id:"add-users-ip-to-allowed-list",level:3},{value:"Setup VPN Client",id:"setup-vpn-client",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"vpn-pritunl",children:"VPN: Pritunl"})}),"\n",(0,i.jsx)(n.p,{children:"By default, our network hosts are not accessible from the outside, VPN will allow you to access them via their private IP addresses."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"cloud arch",src:s(5622).A+"",width:"800",height:"1040"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://devopscube.com/setup-pritunl-vpn-on-ec2/",children:"Full setup guide (ClickOps)"})}),"\n",(0,i.jsx)(n.h2,{id:"todo",children:"TODO"}),"\n",(0,i.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,i.jsxs)(n.li,{className:"task-list-item",children:[(0,i.jsx)(n.input,{type:"checkbox",disabled:!0})," ","update guide for ",(0,i.jsx)(n.code,{children:"terragrunt"})]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"terrafrom-setup",children:"Terrafrom setup"}),"\n",(0,i.jsxs)(n.p,{children:["As a VPN server we use ",(0,i.jsx)(n.a,{href:"https://pritunl.com/",children:"Pritunl"}),". The EC2 instance ",(0,i.jsx)(n.strong,{children:"pritunl-vpn"})," where the server runs is deployed in common-vpc, so it has access to all vpc networks. More about the network architecture:"]}),"\n",(0,i.jsxs)(n.p,{children:["We used terraform to deploy the VPN server. The code is stored in the file ",(0,i.jsx)(n.code,{children:"terraform/aws/live/common/vpn.tf"})," and relies on a custom module (module code: ",(0,i.jsx)(n.code,{children:"terraform/aws/modules/pritunl/"}),")."]}),"\n",(0,i.jsx)(n.h2,{id:"deploy",children:"Deploy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["upd ",(0,i.jsx)(n.code,{children:"common_public_0"})," data to fetch public subnet"]}),"\n",(0,i.jsxs)(n.li,{children:["add public ssk key to ",(0,i.jsx)(n.code,{children:"aws_key_pair.common"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"main.tf"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-terraform",children:'data "aws_subnet" "common_public_0" {\n  vpc_id     = module.vpc.vpc_id\n  cidr_block = var.vpc_public_subnets[0]\n}\n\nresource "aws_key_pair" "common" {\n  key_name   = "vpn-admin"\n  public_key = "ssh-rsa ******"\n  tags = merge(\n    var.tags,\n    {\n      Name = "vpn-admin"\n    },\n  )\n}\n\nvariable "vpn_admins" {\n  type = list(object({\n    name    = string\n    ip_list = list(string)\n  }))\n  sensitive   = false\n  description = "Pritunl admins"\n  validation {\n    condition = alltrue([\n      for user in var.vpn_admins : alltrue([\n        for cidr in user.ip_list : can(\n          regex("^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/32$", cidr)\n        )\n      ])\n    ])\n    error_message = "Wrong admin IP list. Example: [\\"82.82.82.82/32\\"]."\n  }\n}\n\nvariable "vpn_users" {\n  type = list(object({\n    name    = string\n    ip_list = list(string)\n  }))\n  sensitive   = false\n  description = "Pritunl users"\n  validation {\n    condition = alltrue([\n      for user in var.vpn_users : alltrue([\n        for cidr in user.ip_list : can(\n          regex("^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}/32$", cidr)\n        )\n      ])\n    ])\n    error_message = "Wrong user IP list. Example: [\\"82.82.82.82/32\\"]."\n  }\n}\n\nlocals {\n  vpn_admin_cidrs = concat([\n    for admin in var.vpn_admins : [\n      for ip in admin.ip_list : ip\n    ]\n  ]...)\n  vpn_user_cidrs = concat(local.vpn_admin_cidrs, [\n    for user in var.vpn_users : [\n      for ip in user.ip_list : ip\n    ]\n  ]...)\n}\n\nmodule "terraform-aws-pritunl" {\n  source = "../../modules/pritunl"\n\n  aws_key_name     = aws_key_pair.common.key_name\n  public_subnet_id = data.aws_subnet.common_public_0.id\n  admin_cidrs      = local.vpn_admin_cidrs\n  user_cidrs       = local.vpn_user_cidrs\n\n  volume_extra_tags = {\n    Snapshot = "true"\n  }\n\n  tags = merge(\n    var.tags,\n    {\n      Name = "pritunl-vpn"\n    },\n  )\n}\n\nresource "aws_route53_zone" "home_lab" {\n  name = "home.lab"\n  tags = var.tags\n}\n\nresource "aws_route53_record" "common_vpn" {\n  zone_id         = aws_route53_zone.home_lab.zone_id\n  name            = "common-vpn.home.lab"\n  type            = "A"\n  ttl             = "300"\n  records         = [module.terraform-aws-pritunl.elastic_ip]\n  allow_overwrite = true\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"access",children:"Access"}),"\n",(0,i.jsxs)(n.p,{children:["VPN is only accessible from IP addresses in the lists stored in ",(0,i.jsx)(n.code,{children:"terraform/aws/live/common/terraform.tfvars"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-terraform",children:'vpn_admins = [\n  {\n    name    = "Andrew Ozhegov"\n    ip_list = ["88.88.88.88/32"]\n  },\n  {\n    name    = "Dante Aligieri"\n    ip_list = ["77.77.77.77/32"]\n  },\n]\nvpn_users = []\n'})}),"\n",(0,i.jsx)(n.p,{children:"Currently, there are two types of users:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"users"})," have access to the web interface"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"admins"})," additionally have ssh access to network instances"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"backup--restore",children:"Backup & Restore"}),"\n",(0,i.jsxs)(n.p,{children:["We use ",(0,i.jsx)(n.strong,{children:"EBS Lifecycle Manager"})," (DLM) to take a daily snapshot of the pritunl-vpn instance.\nWe store snapshots for the last 7 days. Terraform code ",(0,i.jsx)(n.code,{children:"aws_dlm_lifecycle_policy"})," in the file ",(0,i.jsx)(n.code,{children:"terraform/aws/live/common/vpn_backup.tf"})]}),"\n",(0,i.jsx)(n.p,{children:"If necessary, we will use snapshot to roll back or restore the state of the vpn server. Step-by-step instructions for recovery from aws:"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Restoring from an Amazon EBS snapshot or an AMI"}),"\nTo reduce the recovery time and impact to dependent applications and processes, your restore process must consider the resource that it is replacing.",(0,i.jsx)(n.br,{}),"\n",(0,i.jsx)(n.a,{href:"https://docs.aws.amazon.com/prescriptive-guidance/latest/backup-recovery/restore.html#restore-snapshot",children:"https://docs.aws.amazon.com/prescriptive-guidance/latest/backup-recovery/restore.html#restore-snapshot"})]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-terraform",children:'resource "aws_iam_role" "dlm_lifecycle_role" {\n  name = "dlm-lifecycle-role"\n\n  assume_role_policy = <<EOF\n{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Action": "sts:AssumeRole",\n      "Principal": {\n        "Service": "dlm.amazonaws.com"\n      },\n      "Effect": "Allow",\n      "Sid": ""\n    }\n  ]\n}\nEOF\n\n  tags = var.tags\n}\n\n#tfsec:ignore:aws-iam-no-policy-wildcards\nresource "aws_iam_role_policy" "dlm_lifecycle" {\n  name = "dlm-lifecycle-policy"\n  role = aws_iam_role.dlm_lifecycle_role.id\n\n  policy = <<EOF\n{\n   "Version": "2012-10-17",\n   "Statement": [\n      {\n         "Effect": "Allow",\n         "Action": [\n            "ec2:CreateSnapshot",\n            "ec2:CreateSnapshots",\n            "ec2:DeleteSnapshot",\n            "ec2:DescribeInstances",\n            "ec2:DescribeVolumes",\n            "ec2:DescribeSnapshots"\n         ],\n         "Resource": "*"\n      },\n      {\n         "Effect": "Allow",\n         "Action": [\n            "ec2:CreateTags"\n         ],\n         "Resource": "arn:aws:ec2:*::snapshot/*"\n      }\n   ]\n}\nEOF\n}\n\nresource "aws_dlm_lifecycle_policy" "pritunl_vpn" {\n  description        = "VPN server volume DLM lifecycle policy"\n  execution_role_arn = aws_iam_role.dlm_lifecycle_role.arn\n  state              = "ENABLED"\n\n  policy_details {\n    resource_types = ["VOLUME"]\n\n    schedule {\n      name = "Last week of daily snapshots"\n\n      create_rule {\n        interval      = 24\n        interval_unit = "HOURS"\n        times         = ["23:45"]\n      }\n\n      retain_rule {\n        count = 7\n      }\n\n      tags_to_add = {\n        SnapshotCreator = "DLM"\n      }\n\n      copy_tags = true\n    }\n\n    target_tags = {\n      Snapshot = "true"\n    }\n  }\n\n  tags = merge(\n    var.tags,\n    {\n      Name = "pritunl-vpn"\n    },\n  )\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"setup-guide",children:"Setup guide"}),"\n",(0,i.jsx)(n.h3,{id:"add-users-ip-to-allowed-list",children:"Add user's IP to allowed list"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"terraform/aws/live/common/terraform.tfvars"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-diff",children:'vpn_users = [\n+  {\n+    name    = "YourName"\n+    ip_list = ["7.7.7.7/32"] # your ip\n+  },\n]\n'})}),"\n",(0,i.jsx)(n.h3,{id:"setup-vpn-client",children:"Setup VPN Client"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Access portal:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://common-vpn.home.lab/",children:"https://common-vpn.home.lab/"})," -> ",(0,i.jsx)(n.code,{children:"Sign in with Google"})]}),"\n",(0,i.jsxs)(n.li,{children:["Download Pritunl client and copy ",(0,i.jsx)(n.strong,{children:"Profile URI Link"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"access",src:s(5654).A+"",width:"2786",height:"1076"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pritunl client: ",(0,i.jsx)(n.code,{children:"Import Profile URI"})," -> paste ",(0,i.jsx)(n.strong,{children:"Profile URI Link"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"pritunl import",src:s(2315).A+"",width:"1894",height:"1070"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Connect to VPN"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"pritunl connect",src:s(3292).A+"",width:"1847",height:"1070"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Done!"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},5622:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/pritunl-ba22f0ded304253c7fe60ce1e58e350d.gif"},5654:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/pritunl-access-93554f5301b7d18739430b34ff5f02f7.png"},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);